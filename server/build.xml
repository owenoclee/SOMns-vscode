<project name="som-language-server" default="compile">

    <property name="src.dir"     value="src"/>
    <property name="lib.dir"     value="libs" />
    <property name="som.dir"     value="${lib.dir}/SOMns" />
    <property name="bd.dir"      value="${som.dir}/libs/black-diamonds" />
    <property name="truffle.dir" value="${som.dir}/libs/truffle/truffle" />
    <property name="truffle.build" value="${truffle.dir}/mxbuild/dists" />
    <property name="sdk.build"   value="${som.dir}/libs/truffle/sdk/mxbuild/dists" />

    <property name="mvn.repo"    value="https://repo1.maven.org/maven2" />

    <property name="checkstyle.version" value="7.6.1" />
    <property name="guava.version"      value="19.0" />
    <property name="xbase.lib.version"  value="2.10.0" />
    <property name="xtend.lib.version"  value="2.10.0" />

    <property name="build.dir"   value="bin"/>
    <property name="classes.dir" value="${build.dir}"/>

    <path id="jar.classpath">
        <pathelement location="${lib.dir}/guava-${guava.version}.jar" />
        <pathelement location="${lib.dir}/org.eclipse.xtext.xbase.lib-${xbase.lib.version}.jar" />
        <pathelement location="${lib.dir}/org.eclipse.xtend.lib-${xtend.lib.version}.jar" />
        <pathelement location="${sdk.build}/graal-sdk.jar" />
        <pathelement location="${sdk.build}/word-api.jar" />
        <pathelement location="${truffle.build}/truffle-api.jar" />
        <pathelement location="${truffle.build}/truffle-debug.jar" />
        <pathelement location="${som.dir}/libs/somns-deps.jar" />
        <pathelement location="${som.dir}/build/som.jar" />
        <pathelement location="${bd.dir}/build/black-diamonds.jar" />
    </path>

    <path id="project.classpath">
        <path refid="jar.classpath" />
        <pathelement location="${classes.dir}" />
        <pathelement location="io.typefox.lsapi"/>
        <pathelement location="io.typefox.lsapi.services"/>
    </path>

    <target name="clean" description="Remove build directories and generated code">
        <delete dir="${build.dir}"/>
    </target>

    <target name="check-somns-available">
        <available file="libs/SOMns/.git" property="somns.present"/>
    </target>
    <target name="somns-submodule" depends="check-somns-available"
            unless="somns.present">
        <exec executable="git">
          <arg value="submodule" />
          <arg value="update" />
          <arg value="--init" />
          <arg value="--recursive" />
        </exec>
    </target>

    <target name="somns" depends="somns-submodule">
      <exec executable="ant" dir="${som.dir}">
          <arg value="-Dskip.graal=true" />
          <arg value="jar"/>
      </exec>
      <jar destfile="${bd.dir}/build/black-diamonds.jar" basedir="${bd.dir}/build/classes" />
    </target>
    
    <target name="libs" depends="somns">
        <get src="${mvn.repo}/com/google/guava/guava/${guava.version}/guava-${guava.version}.jar"
            usetimestamp="true"
            dest="${lib.dir}/guava-${guava.version}.jar" />
        <get src="${mvn.repo}/org/eclipse/xtext/org.eclipse.xtext.xbase.lib/${xbase.lib.version}/org.eclipse.xtext.xbase.lib-${xbase.lib.version}.jar"
            usetimestamp="true"
            dest="${lib.dir}/org.eclipse.xtext.xbase.lib-${xbase.lib.version}.jar" />
        <get src="${mvn.repo}/org/eclipse/xtend/org.eclipse.xtend.lib/${xtend.lib.version}/org.eclipse.xtend.lib-${xtend.lib.version}.jar"
            usetimestamp="true"
            dest="${lib.dir}/org.eclipse.xtend.lib-${xtend.lib.version}.jar" />
    </target>

    <target name="checkstyle-jar">
        <get src="http://tenet.dl.sourceforge.net/project/checkstyle/checkstyle/${checkstyle.version}/checkstyle-${checkstyle.version}-all.jar"
            usetimestamp="true"
            dest="${lib.dir}/checkstyle-${checkstyle.version}-all.jar" />
    </target>
    
    <target name="checkstyle" depends="checkstyle-jar" description="Check Code with Checkstyle">
        <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="${lib.dir}/checkstyle-${checkstyle.version}-all.jar" />
        <checkstyle config=".checkstyle_checks.xml">
          <fileset dir="src" includes="**/*.java"/>
          <formatter type="plain"/>
        </checkstyle>
    </target>

    <target name="compile" depends="libs" description="Compile TruffleSOM">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}" />

        <javac includeantruntime="false" destdir="${classes.dir}" debug="true">
          <src path="${src.dir}" />
          <src path="org.eclipse.lsp4j" />
          <src path="org.eclipse.lsp4j-gen" />
          <src path="org.eclipse.lsp4j.jsonrpc" />
          <classpath refid="project.classpath" />
          <compilerarg line="-XDignore.symbol.file" />
          <compilerarg line="-Xlint:all" />
        </javac>
    </target>

    <target name="jar" depends="compile" description="Package as JAR">
        <jar destfile="som-language-server.jar" basedir="${classes.dir}"></jar>
    </target>
    
    <target name="deploy" depends="jar" description="Deploy Language Server files to client">
        <mkdir dir="../out/server"/>
        <copy todir="../out/server" flatten="true">
          <path>
            <pathelement path="som-language-server.jar"/>
            <path refid="jar.classpath" />
          </path>
        </copy>
        <copy todir="../out/server/core-lib">
          <fileset dir="${som.dir}/core-lib"/>
        </copy>
    </target>
</project>
